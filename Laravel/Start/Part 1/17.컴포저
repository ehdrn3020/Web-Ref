17.1 컴포저란? 
- maven, gradle, npm과 같은 의존성 관리 체계


17.2 로컬 컴포넌트 레지스트리 둘러보기
[composer.json]
- 필요한 컴포넌트를 선언할 때는 이 파일안에 직접쓰고 $composer install 로 설치가능
- 또는 콘솔에서 $composer require 벤더/패키지:버전 명령어로도 설치가능
- require-dev : 개발용으로만 필요한 컴포넌트 목록
- 콘솔에서 직접 개발 의존성을 가져올 때는 $composer requre 벤더/패키지 --dev
- 운영서버에서 이 의존성들을 설치하지 않으려면 $composer install --no-dev

- 팀동료는 변경된 소스를 내려받고 composer install 명령어로 필요한 컴포넌트를 설치 할 수 있다.


17.3,4 컴포넌트 가져오기
[console]
- 디버그 바 설치
composer require "barryvdh/laravel-debugbar:3.*.*"

[config/app.php]
- 라라벨의 전역 서비스 프로바이더 레지스트리

-코드상에서 debug($article->toArray());  사용


17.5 install $ update
[composer install]
- 프로젝트가 의존하는 텀포넌트를 처음 설치
- composer.lock에 정의된 텀포넌트 버전을 그대로 설치

[composer update]
- 이미 설치한 컴포넌트의 버전을 업그레이드 할 때


17.6 문제해결
[가끔식 버전 충돌이 발생 할 시]
- composer.json파일의 버전 정보를 매뉴얼 등에서 확인
- 여전히 충돌시 composer.lock과 vendor를 지우고 $composer install 명령으로 컴포넌트 다시 설치


17.7 오토로드
컴포저는 vendor디렉터리 아래에 자신이 참조할 데이터베이스를 만들어 놓는다. 클래스 이름과 파일 경로간 맵핑을 담고 있으며,
vendor/autoload.php파일은 이 데이터베이스를 메모리에 올려놓는다.
어떤 클래스가 동작할 때 다른 클래스를 참조하면, 컴포저 데이터베이스에서 매핑된 파일을 자동으로 require을 수행하는 것이 오토로드다.
