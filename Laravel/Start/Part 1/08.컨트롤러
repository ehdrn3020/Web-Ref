8.1 컨트롤러 만들기

[routes/web.php]
Route::get('/', 'WelcomeController@index');

[console]
php artisan make:controller WelcomeController

[WelcomeController.php]
<?php
namespace App\Http\Controllers;
class WelcomeController extends Controller
{
    public function index(){
      return view('welcome');
    }
}


8.2 Restful 라우트와 컨트롤러

-Restful리소스 컨트롤러는 REST원칙에 따라 URL을 컨트롤러 메서드에 자동으로 연결한다.
>php artisan make:controller ArticlesController --resource

[routes/web.php]
-Providers/ReouteServiceProvider.php에 의해 컨트롤러뒤에 @메서드 를 안붙혀도된다.
Route::resource('articles', 'ArticlesController');  //이름을 복수형 쓰는 것이 관례
>php artisan route:list

-CSRF공격 방어 기능
사용하지 않으면 TokenMismatchException가 나타나는데 이는 허용되지 않은 사용자가 HTTP요청 쓰기동작을 못하도록 한다.

-HTTP미들웨어
HTTP요청이 도메인로직에 닿기 전에 요청을 필터링한다. 
app/Http/Kernel.php에 등록되어있고, 전역미들웨어와 라우트미들웨어로 구분된다.


-Restful 라우트 보충
Route::post(string $uri, \Closuer|array|string $action)
Route::put(string $uri, \Closuer|array|string $action)
Route::patch(string $uri, \Closuer|array|string $action)
Route::delete(string $uri, \Closuer|array|string $action)
Route::options(string $uri, \Closuer|array|string $action)
Route::match(array|string $methods, string $uri, \Closuer|array|string $action)
Route::any(string $uri, \Closuer|array|string $action)

